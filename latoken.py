import re
import private

const_about = "–û –õ–∞—Ç–æ–∫–µ–Ω"
const_culture = '–ö—É–ª—å—Ç—É—Ä–∞'
const_hakaton = '–•–∞–∫–∞—Ç–æ–Ω'
const_onboarding = '–û–Ω–±–æ—Ä–¥–∏–Ω–≥'

actions =  ['—Ä–∞—Å—Å–∫–∞–∂–∏', '–Ω–∞–ø–∏—à–∏', '—Ö–æ—á—É —É–∑–Ω–∞—Ç—å', '–¥–∞–π', '–∫–æ–≥–¥–∞', '—á—Ç–æ –≤–∫–ª—é—á–∞–µ—Ç', '–∏–∑ —á–µ–≥–æ —Å–æ—Å—Ç–æ–∏—Ç', '—á—Ç–æ —ç—Ç–æ']

def get_info_character():
    msg = ' –õ—é–¥–∏ –∫–æ—Ç–æ—Ä—ã–µ –æ–±–ª–∞–¥–∞—é—Ç –∫–∞—á–µ—Å—Ç–≤–∞–º–∏:\n–°–≤–µ—Ä—Ö—É—Å–∏–ª–∏–µ –∏ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å —Ä–µ—à–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É, –∫–æ–≥–¥–∞ –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ —Å–¥–∞–µ—Ç—Å—è\n' \
          '–°—Ç—Ä–µ—Å—Å –∏ –¥–∞–≤–ª–µ–Ω–∏–µ –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è –∏ –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç–∏\n' \
          '‚Äú–ü—ã—Ç–∞–µ—Ç‚Äù –∫–æ–ª–ª–µ–≥ –¥–æ —Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤–∞\n' \
          '–ü—Ä—è–º–æ—Ç–∞ –≤ –æ–±—Å—É–∂–¥–µ–Ω–∏–∏ –ø—Ä–æ–±–ª–µ–º –∏ –æ—à–∏–±–æ–∫, –Ω–µ–¥–æ—Ä–∞–±–æ—Ç–æ–∫\n' \
          '–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –±—É–¥—É—â–µ–µ,–Ω–µ–∂–µ–ª–∏ –ø–æ–ª–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—à–ª–æ–µ'
    return msg

def check_info_character(msg):
    words = ['—Ö–∞—Ä–∞–∫—Ç–µ—Ä', '–∫—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç','–∫–∞–∫–∏–µ –ª—é–¥–∏' , '—á—Ç–æ –Ω—É–∂–Ω–æ']
    extra = ['latoken', '–ª–∞—Ç–æ–∫–µ–Ω']
    return check_something_extra(words, extra, msg, False)
def get_info_for_who():
    msg = f'–†–ê–ë–û–¢–ê –í –õ–ê–¢–û–ö–ï–ù –î–õ–Ø –¢–ï–•–ù–û-–≠–ù–¢–£–ó–ò–ê–°–¢–û–í –°–û –°–ü–û–†–¢–ò–í–ù–´–ú –•–ê–†–ê–ö–¢–ï–†–û–ú–ë—ã—Å—Ç—Ä—ã–π —Ä–æ—Å—Ç —á–µ—Ä–µ–∑ —Ä–µ—à–µ–Ω–∏–µ –Ω–µ—Ç—Ä–∏–≤–∏–∞–ª—å–Ω—ã—Ö –∑–∞–¥–∞—á \n' \
          f'–ü–µ—Ä–µ–¥–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ AIxWEB3\n' \
          f'–ì–ª–æ–±–∞–ª—å–Ω—ã–π —Ä—ã–Ω–æ–∫, –∫–ª–∏–µ–Ω—Ç—ã –≤ 200+ —Å—Ç—Ä–∞–Ω–∞—Ö\n' \
          f'–°–∞–º–∞—è —É—Å–ø–µ—à–Ω–∞—è –∫–æ–º–ø–∞–Ω–∏—è –∏–∑ –°–ù–ì –≤ WEB3\n' \
          f'–£–¥–∞–ª–µ–Ω–Ω–∞—è —Ä–∞–±–æ—Ç–∞, –Ω–æ –±–µ–∑ –¥–∞—É–Ω—à–∏—Ñ—Ç–∏–Ω–≥–∞\n' \
          f'–û–ø–ª–∞—Ç–∞ –≤ —Ç–≤—ë—Ä–¥–æ–π –≤–∞–ª—é—Ç–µ, –±–µ–∑ –ø—Ä–∏–≤—è–∑–∫–∏ –∫ –±–∞–Ω–∫–∞–º\n' \
          f'–û–ø—Ü–∏–æ–Ω—ã —Å "–æ—Ç–∫–µ—à–∏–≤–∞–Ω–∏–µ–º" –∫—Ä–∏–ø—Ç–æ–ª–µ—Ç–æ–º'
    return msg

def check_for_who(msg):
    words = ['–ø–æ–¥—Ö–æ–¥–∏—Ç', '–ø–æ–¥—Ö–æ–∂—É', '–¥–ª—è –∫–æ–≥–æ', '–∫—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç', '–º–æ–≥—É']
    extra = ['latoken', '–ª–∞—Ç–æ–∫–µ–Ω']
    return check_something_extra(words, extra, msg)
def get_info_facts():
    msg = f'1 –ø–æ —á–∏—Å–ª—É –∞–∫—Ç–∏–≤–æ–≤ –¥–ª—è —Ç—Ä–µ–π–¥–∏–Ω–≥–∞ 3,000+ (–ë–∏–Ω–∞–Ω—Å 400+) \n' \
          f'–¢–æ–ø 25 –ö—Ä–∏–ø—Ç–æ –±–∏—Ä–∂–∞ –ø–æ —Ä–µ–π—Ç–∏–Ω–≥–∞–º CoinmarketCap and CoinGecko \n' \
          f'15% –∞–∏—Ä–¥—Ä–æ–ø–æ–≤ –≤ –º–∏—Ä–µ \n4 –º–∏–ª–ª–∏–æ–Ω–∞ –°—á–µ—Ç–æ–≤ \n 1 –º–∏–ª–ª–∏–æ–Ω –ø–ª–∞—Ç—è—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ 2022'
    return msg

def check_facts(msg):
    words = ['—Ñ–∞–∫—Ç']
    extra = ['latoken', '–ª–∞—Ç–æ–∫–µ–Ω']
    return check_something_extra(words, extra, msg)
def check_something(items, msg):
    msg_lower = sub_lower(msg)
    for word in items:
        if msg_lower.find(word) != -1:
            for action in actions:
                if msg_lower.find(action) != -1:
                    return True
    return False

def check_something_extra(items, extra, msg, isActions = True):
    msg_lower = sub_lower(msg)
    for word in items:
        if msg_lower.find(word) != -1:
            for action in actions:
                if msg_lower.find(action) != -1 or isActions == False:
                    for ext in extra:
                        if msg_lower.find(ext) != -1:
                            return True
    return False

def check_api_gpt(msg):
    words = ['api', '–∞–ø–∏', '–∫–ª—é—á']
    return check_something(words, msg)


def get_info_name_bot():
    msg = f'–ú–µ–Ω—è –∑–æ–≤—É—Ç Scarlett, —è –±–æ—Ç –∏–∑ —Å–æ–ª–Ω–µ—á–Ω–æ–≥–æ –®–∞—Ä–º–∞. –ï—Å–ª–∏ —É —Ç–µ–±—è –µ—Å—Ç—å –µ—â–µ –≤–æ–ø—Ä–æ—Å—ã ' \
          f'–ø–æ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥—É –∏–ª–∏ –¥—Ä—É–≥–∏–º –∞—Å–ø–µ–∫—Ç–∞–º —Ä–∞–±–æ—Ç—ã –≤ Latoken, –Ω–µ —Å—Ç–µ—Å–Ω—è–π—Å—è —Å–ø—Ä–∞—à–∏–≤–∞—Ç—å! üòä'
    return msg

def get_name(message):
    first_name = message.from_user.first_name
    username = message.from_user.username
    name = first_name
    if name is None:
        name = username
    if name is None:
        name = '–î–æ—Ä–æ–≥–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'
    return name

def get_info_culture():
    return get_info_principles() + '\n' + get_info_rules() + '\n' + get_info_ceo()
def get_info_principles():
    msg = f'Latoken –∏–º–µ–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω—É—é –∫—É–ª—å—Ç—É—Ä—É, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–º–æ–≥–∞–µ—Ç –Ω–∞–º –±—ã—Ç—å –æ–¥–Ω–∏–º–∏ –∏–∑ –ª—É—á—à–∏—Ö –≤ —Å–≤–æ–µ–π –æ–±–ª–∞—Å—Ç–∏. ' \
          f'–í–æ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–ª—é—á–µ–≤—ã—Ö –∞—Å–ø–µ–∫—Ç–æ–≤ –Ω–∞—à–µ–π –∫—É–ª—å—Ç—É—Ä—ã: \n 1. –ü—Ä–∏–Ω—Ü–∏–ø—ã: \n' \
          f'  - –ö–ª–∏–µ–Ω—Ç—ã –Ω–∞ –ø–µ—Ä–≤–æ–º –º–µ—Å—Ç–µ, —ç–≥–æ –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–º: –ú—ã –≤—Å–µ–≥–¥–∞ —Å—Ç–∞–≤–∏–º –∏–Ω—Ç–µ—Ä–µ—Å—ã –∫–ª–∏–µ–Ω—Ç–æ–≤ –≤—ã—à–µ —Å–≤–æ–∏—Ö —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã—Ö. \n' \
          f' - Demo or Die: –ú—ã —Ñ–æ–∫—É—Å–∏—Ä—É–µ–º—Å—è –Ω–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö –∏ –Ω–µ –∏—â–µ–º –æ–ø—Ä–∞–≤–¥–∞–Ω–∏–π. \n' \
          f' - –ü—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å –∏ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å: –ú—ã –¥–µ–ª–∞–µ–º —Å–≤–æ—é —Ä–∞–±–æ—Ç—É –ø—Ä–æ–∑—Ä–∞—á–Ω–æ–π –∏ –ø–æ–¥–æ—Ç—á–µ—Ç–Ω–æ–π,' \
          f' —á—Ç–æ–±—ã —É—Å—Ç—Ä–∞–Ω–∏—Ç—å —Ö–∞–ª—è–≤—â–∏–∫–æ–≤ –∏ —Ä–µ—à–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—ã. \n  - –û—Ç–∫—Ä—ã—Ç–∞—è –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å: ' \
          f'–ú—ã –¥–∞–µ–º —á–µ—Å—Ç–Ω—É—é –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å –¥–ª—è –ø–æ–≤—ã—à–µ–Ω–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏. \n' \
          f'  - –†–æ—Å—Ç —á–µ—Ä–µ–∑ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å: –ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º –ª—é–±—É—é –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å –¥–ª—è —Ä–æ—Å—Ç–∞ –∏ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ —Å–¥–∞–µ–º—Å—è.'
    return msg
def get_info_rules():
    msg = f'2. –ü—Ä–∞–≤–∏–ª–∞ Navy Seals: \n   - –ú—ã —Ä–∞–±–æ—Ç–∞–µ–º –≤ —É—Å–ª–æ–≤–∏—è—Ö –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–≥–æ —Å—Ç—Ä–µ—Å—Å–∞, —Ö–∞–æ—Å–∞ –∏ –Ω–µ—É–¥–∞—á, ' \
          f'–∫–∞–∫ –º–æ—Ä—Å–∫–∏–µ –∫–æ—Ç–∏–∫–∏, —á—Ç–æ–±—ã –≤—ã—è–≤–∏—Ç—å –ª–∏–¥–µ—Ä–æ–≤.'
    return msg
def get_info_ceo():
    msg = f'3. Peacetime CEO/Wartime CEO: \n   - Wartime CEO: –ù–∞—Ä—É—à–∞–µ—Ç –ø—Ä–æ—Ç–æ–∫–æ–ª—ã –¥–ª—è –ø–æ–±–µ–¥—ã, ' \
          f'—Ñ–æ–∫—É—Å–∏—Ä—É–µ—Ç—Å—è –Ω–∞ –¥–µ—Ç–∞–ª—è—Ö –∏ –≤–µ–¥–µ—Ç —Å–µ–±—è –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ –∫ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–∞–º. \n - Peacetime CEO:' \
          f' –°–æ—Å—Ä–µ–¥–æ—Ç–∞—á–∏–≤–∞–µ—Ç—Å—è –Ω–∞ –±–æ–ª—å—à–æ–π –∫–∞—Ä—Ç–∏–Ω–µ –∏ –¥–µ–ª–µ–≥–∏—Ä—É–µ—Ç —Ä–µ—à–µ–Ω–∏—è. \n ' \
          f'–ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ –Ω–∞—Å –º–æ–∂–Ω–æ —É–∑–Ω–∞—Ç—å –ø–æ —Å—Å—ã–ª–∫–µ: https://deliver.latoken.com/about'
    return msg

def get_info_about():
    msg = f'Latoken ‚Äî —ç—Ç–æ –æ–¥–Ω–∞ –∏–∑ —Ç–æ–ø-20 –∫—Ä–∏–ø—Ç–æ–±–∏—Ä–∂ –∏ –æ–¥–∏–Ω –∏–∑ —Ç–æ–ø-20 —É–¥–∞–ª–µ–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª–µ–π –ø–æ –≤–µ—Ä—Å–∏–∏ Forbes –≤ 2022 –≥–æ–¥—É. ' \
          '–ú—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ —Å–æ—á–µ—Ç–∞–Ω–∏–µ –∫–∞—Ä—å–µ—Ä–Ω–æ–≥–æ —Ä–æ—Å—Ç–∞ –∏ —Ä–∞–±–æ—Ç—ã —Å –ø–µ—Ä–µ–¥–æ–≤—ã–º–∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è–º–∏ AI –∏ Web3.' \
          ' Latoken ‚Äî –∫—Ä—É–ø–Ω–µ–π—à–∏–π —Å—É–ø–µ—Ä–º–∞—Ä–∫–µ—Ç –∞–∫—Ç–∏–≤–æ–≤ —Å –±–æ–ª–µ–µ —á–µ–º 19,000 —Ç–æ–∫–µ–Ω–æ–≤ –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è –∏ 3,000 –¥–ª—è —Ç–æ—Ä–≥–æ–≤–ª–∏.' \
          ' –ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º AI –∫–∞–∫ –∫–æ–ø–∏–ª–æ—Ç–∞ –¥–ª—è —Ç—Ä–µ–π–¥–µ—Ä–æ–≤, –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –æ–ø–µ—Ä–∞—Ü–∏–π. \n ' \
          '–ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ –Ω–∞—Å –º–æ–∂–Ω–æ —É–∑–Ω–∞—Ç—å –ø–æ —Å—Å—ã–ª–∫–µ: https://deliver.latoken.com/about \n ' \
          '–ï—Å–ª–∏ —É —Ç–µ–±—è –µ—Å—Ç—å –µ—â–µ –≤–æ–ø—Ä–æ—Å—ã, –Ω–µ —Å—Ç–µ—Å–Ω—è–π—Å—è —Å–ø—Ä–∞—à–∏–≤–∞—Ç—å!'
    return msg

def get_info_kahaton():
    msg = f' –•–∞–∫–∞—Ç–æ–Ω Latoken –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –∫–∞–∂–¥—É—é –ø—è—Ç–Ω–∏—Ü—É –≤ 18:00 –ø–æ –º–æ—Å–∫–æ–≤—Å–∫–æ–º—É –≤—Ä–µ–º–µ–Ω–∏ —Å –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏ ' \
          f'–∫–æ–º–ø–∞–Ω–∏–∏ –∏ –æ–±–∑–æ—Ä–∞ –∑–∞–¥–∞—á. –ù–∞ —Å–ª–µ–¥—É—é—â–∏–π –¥–µ–Ω—å, –≤ —Å—É–±–±–æ—Ç—É, —É—á–∞—Å—Ç–Ω–∏–∫–∏ –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç –¥–µ–º–æ –≤ 18:00, –∞ ' \
          f'–ø–æ–±–µ–¥–∏—Ç–µ–ª–∏ –æ–±—ä—è–≤–ª—è—é—Ç—Å—è –≤ 19:00, –ø–æ—Å–ª–µ —á–µ–≥–æ —Å–ª–µ–¥—É—é—Ç –∏–Ω—Ç–µ—Ä–≤—å—é –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –æ —Ä–∞–±–æ—Ç–µ.' \
          f' –ü—Ä–∏–∑–æ–≤–æ–π —Ñ–æ–Ω–¥ —Ö–∞–∫–∞—Ç–æ–Ω–∞ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 100K —Å—Ç–æ–∫ –æ–ø—Ü–∏–æ–Ω–æ–≤ –∑–∞ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∫ –∫–æ–º–ø–∞–Ω–∏–∏ –∏–ª–∏ 10K LA. \n ' \
          f'–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –º–æ–∂–Ω–æ –ø–æ —Å—Å—ã–ª–∫–µ: https://t.me/gpt_web3_hackathon/6694 \n' \
          f'–ï—Å–ª–∏ —É —Ç–µ–±—è –µ—Å—Ç—å –µ—â–µ –≤–æ–ø—Ä–æ—Å—ã, –Ω–µ —Å—Ç–µ—Å–Ω—è–π—Å—è —Å–ø—Ä–∞—à–∏–≤–∞—Ç—å!'
    return msg

def check_kahaton(msg):
    words = ['kahaton', '–∫–∞—Ö–∞—Ç–æ–Ω']
    return check_something(words, msg)

def check_onboarding(msg):
    words = ['–æ–Ω–±–æ—Ä–¥–∏–Ω–≥']
    return check_something(words, msg)

def get_info_onboarding():
    msg = '–û–Ω–±–æ—Ä–¥–∏–Ω–≥ –≤ Latoken –≤–∫–ª—é—á–∞–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–ª—é—á–µ–≤—ã—Ö —ç—Ç–∞–ø–æ–≤: \n 1. –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–∞—è –≤—Å—Ç—Ä–µ—á–∞:' \
          ' –í –ø–µ—Ä–≤—ã–π –¥–µ–Ω—å –Ω–æ–≤–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é—Ç –∏ –∑–Ω–∞–∫–æ–º—è—Ç —Å –∫–æ–º–∞–Ω–¥–æ–π. \n' \
          '2. –û–±—É—á–µ–Ω–∏–µ –∏ –∞–¥–∞–ø—Ç–∞—Ü–∏—è: –ù–æ–≤–∏—á–æ–∫ –ø—Ä–æ—Ö–æ–¥–∏—Ç –æ–±—É—á–µ–Ω–∏–µ, –∑–Ω–∞–∫–æ–º–∏—Ç—Å—è —Å –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–º–∏ –ø—Ä–æ—Ü–µ—Å—Å–∞–º–∏ –∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º–∏. \n' \
          '3. –ú–µ–Ω—Ç–æ—Ä—Å—Ç–≤–æ: –ù–∞–∑–Ω–∞—á–∞–µ—Ç—Å—è –º–µ–Ω—Ç–æ—Ä, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–≥–∞–µ—Ç –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è –∏ –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã. \n' \
          '4. –ü–æ—Å—Ç–æ—è–Ω–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞: –†–µ–≥—É–ª—è—Ä–Ω—ã–µ –≤—Å—Ç—Ä–µ—á–∏ —Å —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–µ–º –¥–ª—è –æ–±—Å—É–∂–¥–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –∏ –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏. \n' \
          '–ï—Å–ª–∏ —É —Ç–µ–±—è –µ—Å—Ç—å –µ—â–µ –≤–æ–ø—Ä–æ—Å—ã, –Ω–µ —Å—Ç–µ—Å–Ω—è–π—Å—è —Å–ø—Ä–∞—à–∏–≤–∞—Ç—å!'
    return msg

def sub_lower(msg):
    msg_lower = msg.lower()
    clean_msg = re.sub(r'\s+', ' ', msg_lower).strip()
    return clean_msg


def check_about(msg):
    words = ['latoken', '–ª–∞—Ç–æ–∫–µ–Ω']
    return check_something(words, msg)

def check_culture(msg):
    words = ['latoken', '–ª–∞—Ç–æ–∫–µ–Ω']
    cultures = ['–∫—É–ª—å—Ç—É—Ä']
    return check_something_extra(words, cultures, msg)

def check_name_bot(msg):
    words = ['–∫–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç', '–∫–∞–∫ –≤–∞—Å –∑–æ–≤—É—Ç', '–∫–∞–∫–æ–µ —É —Ç–µ–±—è –∏–º—è', '—Ç–≤–æ–µ –∏–º—è', '—Ç–≤–æ—ë –∏–º—è']
    msg_lower = sub_lower(msg)
    for text in words:
        if msg_lower.find(text) != -1:
            return True
    return False

def greetings(msg):
    words = ['–ø—Ä–∏–≤–µ—Ç', '–¥–æ–±—Ä—ã–π –¥–µ–Ω—å', '–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ', '–¥–æ–±—Ä—ã–π –≤–µ—á–µ—Ä', '–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è']
    msg_lower = sub_lower(msg)
    for text in words:
        if msg_lower==text:
            return True
    return False